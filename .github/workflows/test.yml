name: Test

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 2.7]
        node-version: [8, 10, 12]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check python (unix)
        run: |
          echo "PYTHONX.X"
          python${{ matrix.python-version}} --version

      - name: Check python (windows)
        run: |
          echo "PYTHON"
          python --version

      - name: Install setuptools (unix)
        run: python${{ matrix.python-version }} -m pip install setuptools wheel
        if: matrix.os != 'windows-latest'

      - name: Install pipenv / poetry (unix)
        run: python${{ matrix.python-version }} -m pip install pipenv poetry
        if: matrix.os != 'windows-latest'

      - name: Install setuptools (windows)
        run: python -m pip install setuptools wheel
        if: matrix.os == 'windows-latest'

      - name: Install pipenv / poetry (windows)
        run: python -m pip install pipenv poetry
        if: matrix.os == 'windows-latest'

      - name: Install serverless
        run: npm install -g serverless

      - name: Install deps
        run: npm install

      - name: Lint
        run: npm run ci:lint
        # Don't run lint a hundred times, also it breaks on windows.
        if: matrix.python-version == 3.7 && matrix.node-version == 12 && matrix.os == 'ubuntu-latest'

      - name: Test
        run: npm run test
        env:
          USE_PYTHON: ${{ matrix.python-version }}
          LC_ALL: C.UTF-8
          LANG: C.UTF-8
